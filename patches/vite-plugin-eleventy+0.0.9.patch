diff --git a/node_modules/vite-plugin-eleventy/index.js b/node_modules/vite-plugin-eleventy/index.js
index 4a88f97..98f5518 100644
--- a/node_modules/vite-plugin-eleventy/index.js
+++ b/node_modules/vite-plugin-eleventy/index.js
@@ -26,6 +26,8 @@ const eleventyPlugin = (opts = {}) => {
   let eleventy;
   let files = [];
   let output = [];
+  const outIDs = [];
+  let outFiles = [];
   let base;
 
   // Set up user options
@@ -59,21 +61,18 @@ const eleventyPlugin = (opts = {}) => {
 
       // On build, write files, glob the HTML, and add them to Build Rollup Options
       if (command === 'build') {
-        await eleventy.write();
+        // await eleventy.write();
 
         // Add outputPath to files, needed until https://github.com/11ty/eleventy/issues/1877 is resolved
         // Will be removed once Eleventy supports it natively
         // Only adds index.html if the file's URL doesn't already have an extension
-        files = files.map((f) => {
-          let outputPath = path.join(base, f.url);
-          if (path.extname(f.url) === '') {
-            outputPath = path.join(outputPath, 'index.html');
-          }
+        // files = files.map(f => {
+        //   let outputPath = path.join(process.cwd(), f.outputPath);
 
-          outputPath = normalizePath(outputPath);
+        //   outputPath = normalizePath(outputPath);
 
-          return Object.assign({}, f, { outputPath });
-        });
+        //   return Object.assign({}, f, { outputPath });
+        // });
 
         // Add relative path to replacements for build files.
         if (base !== '.') {
@@ -89,10 +88,18 @@ const eleventyPlugin = (opts = {}) => {
           }
           name = name.startsWith('/') ? name.substring(1) : name;
 
-          acc[name] = cur.outputPath;
+          cur.outId = path.join(process.cwd(), cur.outputPath);
+
+          acc[name] = cur.outId;
+          outIDs.push(cur.outId);
+          outFiles.push(cur);
           return acc;
         }, {});
 
+        console.log(output);
+
+        // console.log(output)
+
         // Return 11ty rollup inputs
         return {
           build: {
@@ -115,6 +122,21 @@ const eleventyPlugin = (opts = {}) => {
       config = resolvedConfig;
     },
 
+    resolveId(id) {
+      if (outIDs.includes(id)) {
+        return id;
+      }
+
+      return null;
+    },
+
+    load(id){
+      if (outIDs.includes(id)) {
+        return outFiles.find(f => f.outId === id).content;
+      }
+      return null;
+    },
+
     // Clean up the compiled files and empty directories after stuff gets compiled
     async closeBundle() {
       await del(Object.values(output));
@@ -125,7 +147,7 @@ const eleventyPlugin = (opts = {}) => {
     configureServer(server) {
       // Set up 11ty watcher and reload.
       eleventy.watch();
-      eleventy.config.events.on('watchChange', (f) => {
+      eleventy.config.events.on('watchChange', f => {
         files = f;
         if (server.ws) {
           server.ws.send({
@@ -142,7 +164,7 @@ const eleventyPlugin = (opts = {}) => {
         const url = pathname.endsWith('/') ? pathname : `${pathname}/`;
 
         // Find the file if it exists!
-        const output = files.find((r) => r.url === url);
+        const output = files.find(r => r.url === url);
         if (output) {
           let ct = '';
 
